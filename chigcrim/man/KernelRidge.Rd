% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/regression.R
\name{KernelRidge}
\alias{KernelRidge}
\title{Kernel Ridge Regression}
\description{
R6 class for Kernel Ridge Regression. Kernel is chosen using a string in
'linear', 'polynomial' or 'rbf' (for a radial basis function kernel). With a
linear kernel, hyperparameters A and B should not be defined. With a
polynomial kernel, A and B should be defined  as the constant and degree of
the polynomial respectively. With an rbf kernel, A should be defined as the
bandwidth, parameter, and B should not be defined. Note that the X matrix
should be scaled before use (e.g., to have mean 0 and standard deviation 1).

A bias column is assumed not to be present in the X matrices, and is
added internally.
}
\examples{
n <- 200
n_test <- 100
X_train <- matrix(runif(n, -2, 4), nrow = n, ncol = 1)
X_test <- matrix(seq(from = -2, to = 4, length.out = n_test), nrow = n_test, ncol = 1)
y_train <- as.vector(sin(X_train)) + rnorm(n, sd = 0.3)
kr <- KernelRidge$new("rbf", lambda = 1, A = 3)
kr$fit(X_train, y_train)
y_hat_rbf <- kr$predict(X_test)
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{kernel}}{String in 'linear', 'polynomial' or 'rbf' for kernel choice.}

\item{\code{lambda}}{Regularisation parameter.}

\item{\code{A}}{First hyperparameter (see description).}

\item{\code{B}}{Second hyperparameter (see description).}

\item{\code{kernel_function}}{The kernel function.}

\item{\code{n}}{Length of training data.}

\item{\code{pred_vector}}{Vector containing (K + lambda I)^-1 * y_train, the 
pre-computed component of the prediction function.}

\item{\code{X_train}}{Training X matrix.}

\item{\code{y_train}}{Training y vector.}

\item{\code{X_test}}{Testing X matrix.}

\item{\code{predictions}}{The predicted values.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{KernelRidge$new()}}
\item \href{#method-fit}{\code{KernelRidge$fit()}}
\item \href{#method-predict}{\code{KernelRidge$predict()}}
\item \href{#method-clone}{\code{KernelRidge$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create new KernelRidge object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KernelRidge$new(kernel, lambda, A = numeric(0), B = numeric(0))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{kernel}}{Kernel choice, 'linear', 'polynomial' or 'rbf'.}

\item{\code{lambda}}{Regularisation parameter.}

\item{\code{A}}{Hyperparameters for polynomial and rbf kernels}

\item{\code{B}}{Hyperparameters for polynomial and rbf kernels}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fit"></a>}}
\if{latex}{\out{\hypertarget{method-fit}{}}}
\subsection{Method \code{fit()}}{
Fits the Gram matrix, an n*n matrix of kernel evaluations on X_train.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KernelRidge$fit(X_train, y_train)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{X_train}}{Training X matrix.}

\item{\code{y_train}}{Training y vector.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-predict"></a>}}
\if{latex}{\out{\hypertarget{method-predict}{}}}
\subsection{Method \code{predict()}}{
Predicts on an X matrix (test or train)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KernelRidge$predict(X_test)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{X_test}}{Test X matrix.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
predictions A vector of predicted values.
Checks arguments are defined correctly
Gives the kernel function with hyperparameters set.
Radial basis function kernel function (compares matrix rows to vector)
Polynomial kernel function (compares matrix rows to vector)
Linear kernel function (compares matrix rows to vector)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KernelRidge$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
